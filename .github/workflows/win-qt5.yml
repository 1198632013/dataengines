# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Windows Qt5.14.2

on:
  push:
    # branches: [ "main" ]
    paths:
      - 'random/**'
      - '.github/workflows/win-qt5.yml'
  pull_request:
    # branches: [ "main" ]
    paths:
      - 'random/**'
      - '.github/workflows/win-qt5.yml'
# env:
#   # Path to the solution file relative to the root of the project.
#   SOLUTION_FILE_PATH: .

#   # Configuration type to build.
#   # You can convert this to a build matrix if you need coverage of multiple configuration types.
#   # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
#   BUILD_CONFIGURATION: Release

# permissions:
#   contents: read

jobs:
  build:
    name: Build
    runs-on: windows-2019
    strategy:
      matrix:
        include:
          # - qt_ver: 5.14.2        
          #   qt_arch: win32_msvc2017
          #   msvc_arch: x86
          #   qt_arch_install: msvc2017
          - qt_ver: 5.14.2        
            qt_arch: win64_msvc2017_64
            msvc_arch: x64
            qt_arch_install: msvc2017_64
    env:
      fileName: dataengines
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
             
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt_ver }}
          arch: ${{ matrix.qt_arch }}
          cache: ${{steps.cache-qt.outputs.cache-hit}}
          
      - name: msvc-build
        id: build
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.msvc_arch }}
          qmake -makefile
          nmake
          echo winSdkDir=%WindowsSdkDir% >> %GITHUB_ENV%
          echo winSdkVer=%WindowsSdkVersion% >> %GITHUB_ENV%
          echo vcToolsInstallDir=%VCToolsInstallDir% >> %GITHUB_ENV%
          echo vcToolsRedistDir=%VCToolsRedistDir% >> %GITHUB_ENV%
          
      - name: package
        id: package      
        env:
          archiveName: ${{ env.fileName }}-${{ matrix.qt_arch }}-${{ matrix.qt_ver }}
          msvcArch: ${{ matrix.msvc_arch }}          
        shell: pwsh
        run: |
          & scripts\windows-publish.ps1 ${env:archiveName}
          # 记录packageName给后续step
           $name = ${env:archiveName}
           echo "::set-output name=packageName::$name"     
           
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.package.outputs.packageName }}
          path: dist
          
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.package.outputs.packageName }}.zip
          asset_name: ${{ steps.package.outputs.packageName }}.zip
          tag: ${{ github.ref }}
          overwrite: true
